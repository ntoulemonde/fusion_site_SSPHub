---
description: |
  exemple de modularité dans le support de présentation
code-fold: show
---

# Comment moduler la présentation {#chapters_2 .backgroundTitre_jaune}

## Modularité de fichiers quarto (.qmd) {#section_2_1 .backgroundStandard_jaune}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

:::{.listeSansPuceNiveau1}
- [Il est possible d'externaliser une partie du support en créant un fichier quarto et en l'intégrant dans le fichier principal avec le code suivant :]{.puceListFleche}
:::

[`{{< include 02_modulariteSupport.qmd >}}`]{.center}

:::{.listeSansPuceNiveau1}

- [Ce "shortcode" doit apparaitre seul sur une ligne et doit être entouré de lignes vides.]{.puceListFleche}
- [Cela revient à copier et coller le texte du fichier inclus dans le fichier principal.]{.puceListFleche}
- [Chaque partie lancée unitairement intègre automatiquement le style de la charte choisie, et cela grâce à l'option `*.qmd` présent dans la partie **render** du fichier [_quarto.yml]{.italic}
]{.puceListFleche}
- Ce fichier doit être préfixé par un ["_"]{.rouge_insee} pour ne pas être ignoré par l'option render du fichier yml. 

:::

{{< include R/data.qmd >}}

## Utilisation de variables {#section_2_2 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

#### Utilisation du fichier _variables.yml

:::{.listeSansPuceNiveau1}

- [il est possible de récupérer et utiliser les variables présentes dans ce fichier avec le shortcode [var]{.rouge_insee} :]{.puceListFleche}
[{{{< var variables.version >}}} : {{< var variables.version >}}]{.center}
:::

[[*Exemple :*]{.souligneRouge} Ainsi, au sein de l'{{< var variables.organisation >}}, vous pouvez contacter le support technique via l'adresse mail suivante : {{< var variables.supportTechnique >}}]{.tiny}



#### Utilisation des métadonnées

:::{.listeSansPuceNiveau1}

- [Pour utiliser un mot clé présent dans les parties yml des fichiers (ex: [_quarto.yml]{.italic}), il faudra utiliser le shortcode [meta]{.rouge_insee} :]{.puceListFleche}
:::

[[*Exemple :*]{.souligneRouge} Pour ce support, les dimensions de la page sont de {{< meta height >}} (hauteur) x {{< meta width >}} (largeur). Cette partie du support a pour vocation de créer un {{< meta description >}}.]{.tiny}

## Intégration statique de données et de code R {#section_2_3 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

::::{.columns}

:::{.column .print_code}

```{r airQualityCode}
#| echo: true
#| output: false
#| fig-cap: Temperature and ozone level.
#| warning: false
library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```
:::

:::{.column}

@fig-airquality further explores the impact of temperature on ozone level.

```{r airQualityGraph}
#| echo: false
#| output: true
#| label: fig-airquality
#| fig-cap: Temperature and ozone level.
#| warning: false

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess")
```
:::
::::

## Intégration statique de données et de code R (part2) {#section_2_4 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

### Exemple 1 : avec un chunk

::::{.columns}

:::{.column}

#### {{< fa solid arrow-right >}} sans mise en forme

```{r repartition_sex_genre1}
# repartition_sex_genre

head(moy_taille_poids_selon_espece)

```

:::
:::{.column}

#### {{< fa solid arrow-right >}} avec une mise en forme (Kable)

```{r repartition_sex_genre2}
# repartition_sex_genre

knitr::kable(head(moy_taille_poids_selon_espece), format = "html", table.attr = "style='width:100%;'")
```

:::
::::

## Intégration statique de données et de code R (part3) {#section_2_5 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

### Exemple 2 : avec un chunk dans le chunk

````
---
title: "My document"
---

#### Exemple 1 : avec un chunk

```{{r}}
# repartition_sex_genre

head(moy_taille_poids_selon_espece)

knitr::kable(head(moy_taille_poids_selon_espece), 
        format = "html", 
        table.attr = "style='width:100%;'")

```

Some additional markdown content.

````


## Intégration dynamique de données {#section_2_6 .backgroundStandard .scrollable}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

::: {.panel-tabset}

## avec le package DT

```{r tableDT}

DT::datatable(moy_taille_poids_selon_espece,
              # plugins = 'scrollResize',
              extensions = c('Buttons','Responsive'),
              class = 'cell-border stripe',
              rownames = TRUE,
              # fillContainer = TRUE,
              caption = "Moyenne de la taille et du poids des espèces animales présentes dans Starwars",
              options = list(
                  columnDefs = list(list(className = 'dt-center', targets = 2:3)),
                  language = fr,
                  dom = 'flrBtip',
                    pageLength = 10,
                    lengthMenu = c(5, 10, 15, 20)
              )
) %>%
  formatRound(c('avg_height','avg_mass'), 2)

```

## avec le package Plotly

:::{.centerWidget .widgetWidth80}
```{r Plot_taillePoid}

plot_taille_poids_par_sexe

```
:::

:::

## Mise en page de graphiques générés avec Plotly {#section_2_7 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

La mise en forme de l'élément interactif dépend de la nature de l'élément.


- La **div** qui contient le graphique **plotly** de la slide précédente est centrée dans la slide à l'aide de classes CSS.(`{.centerWidget .widgetWidth80}`). Différentes tailles sont possibles (cf. **default.css**).
- Cependant, la taille du graphique est fixée dans le code R, à la **ligne 55** du fichier `R/data.qmd`. Si la taille n'est pas fixée ainsi, alors la taille du graphique (scale ou size) va être déformée quand vous entrerez ou sortirez du mode plein écran.


:::{.listeSansPuceNiveau1}
- [Il vous faudra donc ajuster la taille de la div au graphique ou inversement pour que la mise en page soit propre.]{.puceListFleche}
:::

## Mise en page de graphiques générés avec Plotly {#section_2_8 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

:::{.listeSansPuceNiveau1}
- Exemple de graphique plotly centré mais dont la taille n'est pas fixée dans le layout. Passez en mode plein écran pour voir la différence.
:::

:::{.centerWidget .widgetWidth60}
```{r plotBubble, fig.width=10, fig.height=6}

source(file = "R/taillePlotlyNonFixee.R", encoding = "UTF-8")

ggplotly(p)

```
:::


## Mise en page de graphiques générés avec ggplot2 {#section_2_9 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

:::{.listeSansPuceNiveau1}
- La mise en page du même graphique est différente si celui-ci est généré avec gglot2 seulement :
:::

```{r graph3, fig.width=10, fig.height=6, fig.align='center'}

p

```


## Mise en page de cartes générées avec leaflet {#section_2_10 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

:::{.listeSansPuceNiveau1}
- La mise en page d'une carte peut être faite au niveau du chunk ou à l'intérieur du chunk :
:::


:::{.border}

```{r cartePleineSlide, fig.width=20, fig.height=7}
# #| fig-width: 20
# #| fig-height: 7
 
source(file = "R/generateMap.R", encoding = "UTF-8")

output_map

```
:::


## Mise en page de plusieurs éléments côte à côte {#section_2_11 .backgroundStandard}

:::{.enteteAvecTitre}
Comment moduler la présentation ?
:::

```{r carteEtGraph}
#| layout: [[1,1]]
#| fig-width: 9
#| fig-height: 8
##| fig-asp: .50

# voir sur la doc quarto pages "figures" ou "article layout"  
# ou sur les [options des chunks](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf) 
# pour les différentes configurations possibles.

source(file = "R/taillePlotlyFixee.R", encoding = "UTF-8")

output_map

fig

```












